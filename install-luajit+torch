#!/usr/bin/env bash

######################################################################
# Torch install
#
# This script installs Torch7, and a few extra packages
# (penlight, optim, parallel, image).
# 
# The install is done via Luarocks, which enables package
# versions. This is the recommended method to deploy Torch,
# torch-pkg is being deprecated.
#
#    Once this script has been run once, you should be able to run
#    extra luarocks commands, and in particular install new packages:
#    $ luarocks install json
#    $ torch
#    > require 'json'
#
######################################################################

# Prefix:
PREFIX=${PREFIX-/usr/local}
echo "Installing Torch into: $PREFIX"

if [[ `uname` == 'Linux' ]]; then
    export CMAKE_LIBRARY_PATH=/opt/OpenBLAS/include:/opt/OpenBLAS/lib:$CMAKE_LIBRARY_PATH
fi

# Build and install Torch7
cd /tmp
git clone https://github.com/torch/luajit-rocks.git
cd luajit-rocks
mkdir build; cd build
git checkout master; git pull
rm -f CMakeCache.txt
cmake .. -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_BUILD_TYPE=Release
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
make
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
make install || sudo -E make install
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
# check if we are on mac and fix RPATH for local install
path_to_install_name_tool=$(which install_name_tool)
if [ -x "$path_to_install_name_tool" ] 
then
   install_name_tool -id ${PREFIX}/lib/libluajit.dylib ${PREFIX}/lib/libluajit.dylib
fi

# Statuses:
sundown=ok
cwrap=ok
paths=ok
torch=ok
nn=ok
dok=ok
gnuplot=ok
qtlua=ok
qttorch=ok
lfs=ok
penlight=ok
sys=ok
xlua=ok
image=ok
optim=ok
cjson=ok
trepl=ok

path_to_nvcc=$(which nvcc)
if [ -x "$path_to_nvcc" ]
then  
    cutorch=ok
    cunn=ok
fi

# Install base packages:
$PREFIX/bin/luarocks install sundown       ||  sudo -E $PREFIX/bin/luarocks install sundown
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install cwrap         ||  sudo -E $PREFIX/bin/luarocks install cwrap  
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install paths         ||  sudo -E $PREFIX/bin/luarocks install paths  
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install torch         ||  sudo -E $PREFIX/bin/luarocks install torch  
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install nn            ||  sudo -E $PREFIX/bin/luarocks install nn     
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install dok           ||  sudo -E $PREFIX/bin/luarocks install dok    
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install gnuplot       ||  sudo -E $PREFIX/bin/luarocks install gnuplot
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
[ -n "$cutorch" ] && \
($PREFIX/bin/luarocks install cutorch      ||  sudo -E $PREFIX/bin/luarocks install cutorch        ||   cutorch=failed )
[ -n "$cunn" ] && \
($PREFIX/bin/luarocks install cunn         ||  sudo -E $PREFIX/bin/luarocks install cunn           ||   cunn=failed )
#$PREFIX/bin/luarocks install qtlua         ||  sudo -E $PREFIX/bin/luarocks install qtlua  
#RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
#$PREFIX/bin/luarocks install qttorch       ||  sudo -E $PREFIX/bin/luarocks install qttorch
#RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install luafilesystem ||  sudo -E $PREFIX/bin/luarocks install luafilesystem
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install penlight      ||  sudo -E $PREFIX/bin/luarocks install penlight 
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install sys           ||  sudo -E $PREFIX/bin/luarocks install sys      
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install xlua          ||  sudo -E $PREFIX/bin/luarocks install xlua     
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install image         ||  sudo -E $PREFIX/bin/luarocks install image    
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install optim         ||  sudo -E $PREFIX/bin/luarocks install optim    
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install lua-cjson     ||  sudo -E $PREFIX/bin/luarocks install lua-cjson
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi
$PREFIX/bin/luarocks install trepl         ||  sudo -E $PREFIX/bin/luarocks install trepl    
RET=$?; if [ $RET -ne 0 ]; then echo "Error. Exiting."; exit $RET; fi

# Done.
echo ""
echo "=> Torch7 has been installed successfully"
echo ""
echo "  + Extra packages have been installed as well:"
echo "     $ luarocks list"
echo ""
echo "  + To install more packages, do:"
echo "     $ luarocks search --all"
echo "     $ luarocks install PKG_NAME"
echo ""
echo "  + Note: on MacOS, it's a good idea to install GCC 4.9 to enable OpenMP."
echo "     You can do this by with brew"
echo "      $ brew install gcc --without-multilib"
echo "     then edit ~/.profile with the lines"
echo "      export CC=gcc-4.9"
echo "      export CXX=g++-4.9"
echo "     and make sure you load the new environmental variables into your session"
echo "      $ source ~/.profile"
echo "     For installing cunn, you will need instead the default AppleClang compiler."
echo ""
echo "  + packages installed:"
echo "    - sundown   : " $sundown
echo "    - cwrap     : " $cwrap
echo "    - paths     : " $paths
echo "    - torch     : " $torch
echo "    - nn        : " $nn
echo "    - dok       : " $dok
echo "    - gnuplot   : " $gnuplot
[ -n "$cutorch" ] && echo "    - cutorch   : " $cutorch
[ -n "$cunn" ]    && echo "    - cunn      : " $cunn
echo "    - qtlua     : " $qtlua
echo "    - qttorch   : " $qttorch
echo "    - lfs       : " $lfs
echo "    - penlight  : " $penlight
echo "    - sys       : " $sys
echo "    - xlua      : " $xlua
echo "    - image     : " $image
echo "    - optim     : " $optim
echo "    - cjson     : " $cjson
echo "    - trepl     : " $trepl
echo ""

#will not work without cuda
sudo luarocks install cutorch
sudo luarocks install cunn

sudo luarocks install pl
sudo luarocks install xlua
sudo luarocks install optim
sudo luarocks install cjson
sudo luarocks install env
sudo luarocks install graphicsmagick
sudo luarocks install fs
sudo luarocks install nnx
sudo luarocks install dp

# will not work without cuda
sudo luarocks install cudnn
sudo luarocks install cunnx
sudo luarocks install graph

sudo luarocks install nngraph
sudo luarocks install totem

sudo luarocks install hdf5
sudo luarocks install matio
sudo luarocks install csvigo
sudo luarocks install csv2tensor
sudo luarocks install uuid
sudo luarocks install moses
sudo luarocks install basexx

sudo luarocks install lzmq
# will not work without ipython
sudo luarocks install itorch
